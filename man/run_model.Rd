% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run-model.R
\name{run_model}
\alias{run_model}
\title{Run Bayesian model}
\usage{
run_model(
  model_data,
  refresh = 100,
  chains = 4,
  parallel_chains = 4,
  iter_warmup = 1000,
  iter_sampling = 1000,
  adapt_delta = 0.95,
  max_treedepth = 14,
  k = NULL,
  output_basename = NULL,
  output_dir = ".",
  save_model = TRUE,
  overwrite = FALSE,
  set_seed = NULL,
  quiet = FALSE,
  ...
)
}
\arguments{
\item{model_data}{List. Model data generated by \code{prepare_model()}.}

\item{refresh}{Numeric. Passed to \code{cmdstanr::sample()}. Number of iterations
between screen updates. If 0, only errors are shown.}

\item{chains}{Numeric. Passed to \code{cmdstanr::sample()}. Number of Markov
chains to run.}

\item{parallel_chains}{Numeric. Passed to \code{cmdstanr::sample()}. Maximum
number of chains to run in parallel.}

\item{iter_warmup}{Numeric. Passed to \code{cmdstanr::sample()}. Number of warmup
iterations per chain.}

\item{iter_sampling}{Numeric. Passed to \code{cmdstanr::sample()}. Number of
sampling (post-warmup) iterations per chain.}

\item{adapt_delta}{Numeric. Passed to \code{cmdstanr::sample()}. The adaptation
target acceptance statistic.}

\item{max_treedepth}{Numeric. Passed to \code{cmdstanr::sample()}. The maximum
allowed tree depth for the NUTS engine. See \code{?cmdstanr::sample}.}

\item{k}{Numeric. The K-fold group to run for cross-validation. Only relevant
if folds defined by \code{prepare_model(calculate_cv = TRUE)} or custom
definition. See \code{?prepare_model} or the \href{https://bbsBayes.github.io/bbsBayes2/articles/models.html}{models article} for more
details.}

\item{output_basename}{Character. Name of the files created as part of the
Stan model run and the final model output RDS file if \code{save_model = TRUE}.}

\item{output_dir}{Character. Directory in which all model files will be
created.}

\item{save_model}{Logical. Whether or not to save the model output to file
as an RDS object with all required data. Defaults to \code{TRUE}.}

\item{overwrite}{Logical. Whether to overwrite an existing model output file
when saving.}

\item{set_seed}{Numeric. If \code{NULL} (default) no seed is set. Otherwise an
integer number to be used with \code{withr::with_seed()} internally to ensure
reproducibility.}

\item{quiet}{Logical. Suppress progress messages? Default \code{FALSE}.}

\item{...}{Other arguments passed on to \code{cmdstanr::sample()}.}
}
\value{
List model fit and other (meta) data.
\itemize{
\item \code{model_fit} - cmdstanr model output
\item \code{model_data} - list of data formatted for use in Stan modelling
\item \code{meta_data} - meta data defining the analysis
\item \code{meta_strata} - data frame listing strata meta data
\item \code{raw_data} - data frame of summarized counts
}
}
\description{
Run Bayesian model with \code{cmdstandr::sample()}using prepare data and model
parameters specified in previous steps.
}
\details{
The model is set up in \code{prepare_model()}. The \code{run_model()} function
does the final (and often long-running) step of actually running the model.
Here is where you can tweak how the model will be run (iterations etc.).

See the \href{https://bbsBayes.github.io/bbsBayes2/articles/models.html}{models article} for more
advanced examples and explanations.
}
\examples{
\dontshow{if (have_cmdstan()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
s <- stratify(by = "bbs_cws", sample_data = TRUE)
p <- prepare_data(s)
pm <- prepare_model(p, model = "first_diff", model_variant = "hier")

# Run model (quick and dirty)
m <- run_model(pm, iter_warmup = 20, iter_sampling = 20, chains = 2)

# Clean up (remove model output files)
unlink(list.files(pattern = paste0("BBS_STAN_first_diff_hier_", Sys.Date())))
\dontshow{\}) # examplesIf}
}
\seealso{
Other modelling functions: 
\code{\link{copy_model_file}()},
\code{\link{save_model_run}()}
}
\concept{modelling functions}
